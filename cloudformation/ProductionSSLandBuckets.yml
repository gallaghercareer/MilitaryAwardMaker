AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  RootDomainName:
    Type: String
    Default: "militaryawardwriter.com"
  HostedZoneId:
    Type: String
    Default: "Z057381329QIYL3F9NOJS"
    Description: "The ID of the hosted zone in Route 53"

Resources:
 # ACM Certificate for both www and root domain
  CombinedCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub www.${RootDomainName}  # Primary domain set to www
      ValidationMethod: DNS
      SubjectAlternativeNames:
        - !Ref RootDomainName  # Adding the root domain as SAN
      DomainValidationOptions:
        - DomainName: !Sub www.${RootDomainName}
          HostedZoneId: !Ref HostedZoneId
        - DomainName: !Ref RootDomainName
          HostedZoneId: !Ref HostedZoneId
      Tags:
        - Key: Name
          Value: CombinedCertificate

  # Root S3 bucket
  RootBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false    
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # WWW S3 bucket
  WWWBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub www.${RootDomainName}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false   
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # S3 bucket policy for root domain
  RootBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyRootPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref RootBucket
                - /*
      Bucket: !Ref RootBucket

  # S3 bucket policy for www subdomain
  WWWBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyWWWPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WWWBucket
                - /*
      Bucket: !Ref WWWBucket

  # DNS Record for the root domain
  DNSRecordRoot:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref RootDomainName
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront Hosted Zone ID
        DNSName: !GetAtt CloudFrontDistribution.DomainName

  # DNS Record for the www subdomain
  DNSRecordWWW:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub www.${RootDomainName}
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFront Hosted Zone ID
        DNSName: !GetAtt CloudFrontDistribution.DomainName

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub ${RootDomainName}.s3-website-us-east-1.amazonaws.com
            Id: S3WebsiteOrigin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: S3WebsiteOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - HEAD
            - DELETE
            - POST
            - GET
            - OPTIONS
            - PUT
            - PATCH
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        ViewerCertificate:
          AcmCertificateArn: !Ref CombinedCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
        Aliases:
          - !Ref RootDomainName
          - !Sub www.${RootDomainName}
        Enabled: true

Outputs:
  WebsiteURL:
    Value: !GetAtt RootBucket.WebsiteURL
    Description: "URL for website hosted on S3"
  DistributionDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: "The domain name of the CloudFront distribution"
