
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  RootDomainName:
    Type: String
    Default: "militaryawardwriter.com"
  HostedZoneId:
    Type: String
    Description: "The ID of the hosted zone in Route 53"

Resources:
#create SSL Certificate
 MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref RootDomainName
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref RootDomainName
          HostedZoneId: !Ref HostedZoneId
      SubjectAlternativeNames:
        - !Sub www.${RootDomainName}
      Tags:
        - Key: Name
          Value: MyCertificate

#create s3 bucket output bucket name
  RootBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false    
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  WWWBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub www.${RootDomainName}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false   
      WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
    UpdateReplacePolicy: Retain

 # Create S3 bucket policy for root domain
  RootBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyRootPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref RootBucket
                - /*
      Bucket: !Ref RootBucket

  # Create S3 bucket policy for www subdomain
  WWWBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyWWWPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WWWBucket
                - /*
      Bucket: !Ref WWWBucket

Outputs:
  WebsiteURL:
    Value: !GetAtt RootBucket.WebsiteURL
    Description: "URL for website hosted on S3"

